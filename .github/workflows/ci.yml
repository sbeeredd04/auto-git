name: CI

permissions:
  contents: read
  actions: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: Validate Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Check for circular dependencies
        run: |
          echo "🔍 Checking for circular dependencies..."
          
          # Function to check dependencies in a package.json file
          check_deps() {
            local file="$1"
            local name="$2"
            
            if [ ! -f "$file" ]; then
              echo "⚠️  $file not found, skipping..."
              return 0
            fi
            
            echo "📋 Checking $name..."
            
            # Extract dependencies section and check for self-reference
            if grep -A 50 '"dependencies"' "$file" | grep -q '"@sbeeredd04/auto-git"'; then
              echo "❌ Circular dependency detected in $name"
              return 1
            fi
            
            echo "✅ No circular dependencies in $name"
            return 0
          }
          
          # Check main package.json
          check_deps "package.json" "main package.json"
          main_result=$?
          
          # Check gitcue package.json
          check_deps "gitcue/package.json" "gitcue/package.json"
          gitcue_result=$?
          
          # Exit with error if any check failed
          if [ $main_result -ne 0 ] || [ $gitcue_result -ne 0 ]; then
            echo "💥 Circular dependency validation failed!"
            exit 1
          fi
          
          echo "🎉 All dependency validations passed!"

  test:
    name: Test Package
    runs-on: ${{ matrix.os }}
    needs: validate
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Test CLI functionality
        run: |
          echo "🧪 Testing CLI functionality..."
          node bin/auto-git.js --help
          echo "✅ CLI help command works"

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [validate, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Create package
        run: |
          echo "📦 Creating npm package..."
          npm pack
          
          echo "📋 Package contents:"
          ls -la *.tgz
          
          echo "✅ Package created successfully"
        
      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm-package-${{ github.sha }}
          path: '*.tgz'
          retention-days: 30 